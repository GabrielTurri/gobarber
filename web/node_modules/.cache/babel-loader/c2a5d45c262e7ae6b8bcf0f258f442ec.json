{"ast":null,"code":"import inherits from './util/inherits';\nimport MixedSchema from './mixed';\nimport { boolean as locale } from './locale';\nimport isAbsent from './util/isAbsent';\nexport default BooleanSchema;\n\nfunction BooleanSchema() {\n  var _this = this;\n\n  if (!(this instanceof BooleanSchema)) return new BooleanSchema();\n  MixedSchema.call(this, {\n    type: 'boolean'\n  });\n  this.withMutation(function () {\n    _this.transform(function (value) {\n      if (!this.isType(value)) {\n        if (/^(true|1)$/i.test(value)) return true;\n        if (/^(false|0)$/i.test(value)) return false;\n      }\n\n      return value;\n    });\n  });\n}\n\ninherits(BooleanSchema, MixedSchema, {\n  _typeCheck: function _typeCheck(v) {\n    if (v instanceof Boolean) v = v.valueOf();\n    return typeof v === 'boolean';\n  },\n  isTrue: function isTrue(message) {\n    if (message === void 0) {\n      message = locale.isValue;\n    }\n\n    return this.test({\n      message: message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'true'\n      },\n      test: function test(value) {\n        return isAbsent(value) || value === true;\n      }\n    });\n  },\n  isFalse: function isFalse(message) {\n    if (message === void 0) {\n      message = locale.isValue;\n    }\n\n    return this.test({\n      message: message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'false'\n      },\n      test: function test(value) {\n        return isAbsent(value) || value === false;\n      }\n    });\n  }\n});","map":{"version":3,"sources":["/home/turri/www/gobarber/web/node_modules/yup/es/boolean.js"],"names":["inherits","MixedSchema","boolean","locale","isAbsent","BooleanSchema","_this","call","type","withMutation","transform","value","isType","test","_typeCheck","v","Boolean","valueOf","isTrue","message","isValue","name","exclusive","params","isFalse"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,iBAArB;AACA,OAAOC,WAAP,MAAwB,SAAxB;AACA,SAASC,OAAO,IAAIC,MAApB,QAAkC,UAAlC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,eAAeC,aAAf;;AAEA,SAASA,aAAT,GAAyB;AACvB,MAAIC,KAAK,GAAG,IAAZ;;AAEA,MAAI,EAAE,gBAAgBD,aAAlB,CAAJ,EAAsC,OAAO,IAAIA,aAAJ,EAAP;AACtCJ,EAAAA,WAAW,CAACM,IAAZ,CAAiB,IAAjB,EAAuB;AACrBC,IAAAA,IAAI,EAAE;AADe,GAAvB;AAGA,OAAKC,YAAL,CAAkB,YAAY;AAC5BH,IAAAA,KAAK,CAACI,SAAN,CAAgB,UAAUC,KAAV,EAAiB;AAC/B,UAAI,CAAC,KAAKC,MAAL,CAAYD,KAAZ,CAAL,EAAyB;AACvB,YAAI,cAAcE,IAAd,CAAmBF,KAAnB,CAAJ,EAA+B,OAAO,IAAP;AAC/B,YAAI,eAAeE,IAAf,CAAoBF,KAApB,CAAJ,EAAgC,OAAO,KAAP;AACjC;;AAED,aAAOA,KAAP;AACD,KAPD;AAQD,GATD;AAUD;;AAEDX,QAAQ,CAACK,aAAD,EAAgBJ,WAAhB,EAA6B;AACnCa,EAAAA,UAAU,EAAE,SAASA,UAAT,CAAoBC,CAApB,EAAuB;AACjC,QAAIA,CAAC,YAAYC,OAAjB,EAA0BD,CAAC,GAAGA,CAAC,CAACE,OAAF,EAAJ;AAC1B,WAAO,OAAOF,CAAP,KAAa,SAApB;AACD,GAJkC;AAKnCG,EAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,OAAhB,EAAyB;AAC/B,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,MAAAA,OAAO,GAAGhB,MAAM,CAACiB,OAAjB;AACD;;AAED,WAAO,KAAKP,IAAL,CAAU;AACfM,MAAAA,OAAO,EAAEA,OADM;AAEfE,MAAAA,IAAI,EAAE,UAFS;AAGfC,MAAAA,SAAS,EAAE,IAHI;AAIfC,MAAAA,MAAM,EAAE;AACNZ,QAAAA,KAAK,EAAE;AADD,OAJO;AAOfE,MAAAA,IAAI,EAAE,SAASA,IAAT,CAAcF,KAAd,EAAqB;AACzB,eAAOP,QAAQ,CAACO,KAAD,CAAR,IAAmBA,KAAK,KAAK,IAApC;AACD;AATc,KAAV,CAAP;AAWD,GArBkC;AAsBnCa,EAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBL,OAAjB,EAA0B;AACjC,QAAIA,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,MAAAA,OAAO,GAAGhB,MAAM,CAACiB,OAAjB;AACD;;AAED,WAAO,KAAKP,IAAL,CAAU;AACfM,MAAAA,OAAO,EAAEA,OADM;AAEfE,MAAAA,IAAI,EAAE,UAFS;AAGfC,MAAAA,SAAS,EAAE,IAHI;AAIfC,MAAAA,MAAM,EAAE;AACNZ,QAAAA,KAAK,EAAE;AADD,OAJO;AAOfE,MAAAA,IAAI,EAAE,SAASA,IAAT,CAAcF,KAAd,EAAqB;AACzB,eAAOP,QAAQ,CAACO,KAAD,CAAR,IAAmBA,KAAK,KAAK,KAApC;AACD;AATc,KAAV,CAAP;AAWD;AAtCkC,CAA7B,CAAR","sourcesContent":["import inherits from './util/inherits';\nimport MixedSchema from './mixed';\nimport { boolean as locale } from './locale';\nimport isAbsent from './util/isAbsent';\nexport default BooleanSchema;\n\nfunction BooleanSchema() {\n  var _this = this;\n\n  if (!(this instanceof BooleanSchema)) return new BooleanSchema();\n  MixedSchema.call(this, {\n    type: 'boolean'\n  });\n  this.withMutation(function () {\n    _this.transform(function (value) {\n      if (!this.isType(value)) {\n        if (/^(true|1)$/i.test(value)) return true;\n        if (/^(false|0)$/i.test(value)) return false;\n      }\n\n      return value;\n    });\n  });\n}\n\ninherits(BooleanSchema, MixedSchema, {\n  _typeCheck: function _typeCheck(v) {\n    if (v instanceof Boolean) v = v.valueOf();\n    return typeof v === 'boolean';\n  },\n  isTrue: function isTrue(message) {\n    if (message === void 0) {\n      message = locale.isValue;\n    }\n\n    return this.test({\n      message: message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'true'\n      },\n      test: function test(value) {\n        return isAbsent(value) || value === true;\n      }\n    });\n  },\n  isFalse: function isFalse(message) {\n    if (message === void 0) {\n      message = locale.isValue;\n    }\n\n    return this.test({\n      message: message,\n      name: 'is-value',\n      exclusive: true,\n      params: {\n        value: 'false'\n      },\n      test: function test(value) {\n        return isAbsent(value) || value === false;\n      }\n    });\n  }\n});"]},"metadata":{},"sourceType":"module"}