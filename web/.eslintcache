[{"/home/turri/www/gobarber/web/src/styles/global.ts":"1","/home/turri/www/gobarber/web/src/components/Input/index.tsx":"2","/home/turri/www/gobarber/web/src/components/Tooltip/styles.ts":"3","/home/turri/www/gobarber/web/src/pages/SignIn/index.tsx":"4","/home/turri/www/gobarber/web/src/App.tsx":"5","/home/turri/www/gobarber/web/src/services/api.ts":"6","/home/turri/www/gobarber/web/src/components/Input/styles.ts":"7","/home/turri/www/gobarber/web/src/components/Button/styles.ts":"8","/home/turri/www/gobarber/web/src/components/Tooltip/index.tsx":"9","/home/turri/www/gobarber/web/src/components/Button/index.tsx":"10","/home/turri/www/gobarber/web/src/utils/getValidationErrors.ts":"11","/home/turri/www/gobarber/web/src/hooks/AuthContext.tsx":"12","/home/turri/www/gobarber/web/src/pages/SignIn/styles.ts":"13"},{"size":492,"mtime":1606151953645,"results":"14","hashOfConfig":"15"},{"size":1608,"mtime":1607541998946,"results":"16","hashOfConfig":"15"},{"size":761,"mtime":1607556482577,"results":"17","hashOfConfig":"15"},{"size":2049,"mtime":1608246747289,"results":"18","hashOfConfig":"15"},{"size":344,"mtime":1608247762476,"results":"19","hashOfConfig":"15"},{"size":116,"mtime":1607907577657,"results":"20","hashOfConfig":"15"},{"size":1108,"mtime":1607556512117,"results":"21","hashOfConfig":"15"},{"size":381,"mtime":1606404939448,"results":"22","hashOfConfig":"15"},{"size":355,"mtime":1607555585555,"results":"23","hashOfConfig":"15"},{"size":316,"mtime":1606405025225,"results":"24","hashOfConfig":"15"},{"size":320,"mtime":1607537702724,"results":"25","hashOfConfig":"15"},{"size":1705,"mtime":1608247582814,"results":"26","hashOfConfig":"15"},{"size":1155,"mtime":1606404819299,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"gsho5f",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/turri/www/gobarber/web/src/styles/global.ts",[],["57","58","59","60","61"],"/home/turri/www/gobarber/web/src/components/Input/index.tsx",["62","63","64"],"import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport Tootlip from '../Tooltip/index';\n\nimport { Container, ErrorDiv } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (\n        <ErrorDiv title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </ErrorDiv>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n",["65","66","67","68","69"],"/home/turri/www/gobarber/web/src/components/Tooltip/styles.ts",[],"/home/turri/www/gobarber/web/src/pages/SignIn/index.tsx",["70"],"/home/turri/www/gobarber/web/src/App.tsx",[],"/home/turri/www/gobarber/web/src/services/api.ts",[],"/home/turri/www/gobarber/web/src/components/Input/styles.ts",[],"/home/turri/www/gobarber/web/src/components/Button/styles.ts",[],"/home/turri/www/gobarber/web/src/components/Tooltip/index.tsx",[],"/home/turri/www/gobarber/web/src/components/Button/index.tsx",["71"],"/home/turri/www/gobarber/web/src/utils/getValidationErrors.ts",["72"],"/home/turri/www/gobarber/web/src/hooks/AuthContext.tsx",[],"/home/turri/www/gobarber/web/src/pages/SignIn/styles.ts",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","replacedBy":"80"},{"ruleId":"81","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":2,"column":3,"nodeType":"85","messageId":"86","endLine":2,"endColumn":22},{"ruleId":"83","severity":1,"message":"87","line":8,"column":10,"nodeType":"85","messageId":"86","endLine":8,"endColumn":23},{"ruleId":"83","severity":1,"message":"88","line":12,"column":8,"nodeType":"85","messageId":"86","endLine":12,"endColumn":15},{"ruleId":"73","replacedBy":"89"},{"ruleId":"75","replacedBy":"90"},{"ruleId":"77","replacedBy":"91"},{"ruleId":"79","replacedBy":"92"},{"ruleId":"81","replacedBy":"93"},{"ruleId":"83","severity":1,"message":"94","line":3,"column":10,"nodeType":"85","messageId":"86","endLine":3,"endColumn":21},{"ruleId":"83","severity":1,"message":"95","line":1,"column":17,"nodeType":"85","messageId":"86","endLine":1,"endColumn":37},{"ruleId":"83","severity":1,"message":"96","line":1,"column":10,"nodeType":"85","messageId":"86","endLine":1,"endColumn":25},"lines-around-directive",["97"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'InputHTMLAttributes' is defined but never used.","Identifier","unusedVar","'IconBaseProps' is defined but never used.","'Tootlip' is defined but never used.",["97"],[],[],[],[],"'FormHandles' is defined but never used.","'ButtonHTMLAttributes' is defined but never used.","'ValidationError' is defined but never used.","padding-line-between-statements"]