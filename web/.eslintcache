[{"/home/turri/www/gobarber/web/src/styles/global.ts":"1","/home/turri/www/gobarber/web/src/components/Input/index.tsx":"2","/home/turri/www/gobarber/web/src/components/Tooltip/styles.ts":"3","/home/turri/www/gobarber/web/src/pages/SignIn/index.tsx":"4","/home/turri/www/gobarber/web/src/App.tsx":"5","/home/turri/www/gobarber/web/src/services/api.ts":"6","/home/turri/www/gobarber/web/src/components/Input/styles.ts":"7","/home/turri/www/gobarber/web/src/components/Button/styles.ts":"8","/home/turri/www/gobarber/web/src/components/Tooltip/index.tsx":"9","/home/turri/www/gobarber/web/src/components/Button/index.tsx":"10","/home/turri/www/gobarber/web/src/utils/getValidationErrors.ts":"11","/home/turri/www/gobarber/web/src/pages/SignIn/styles.ts":"12","/home/turri/www/gobarber/web/src/components/ToastContainer/styles.ts":"13","/home/turri/www/gobarber/web/src/components/ToastContainer/index.tsx":"14","/home/turri/www/gobarber/web/src/hooks/toast.tsx":"15","/home/turri/www/gobarber/web/src/hooks/index.tsx":"16","/home/turri/www/gobarber/web/src/components/ToastContainer/Toast/styles.ts":"17","/home/turri/www/gobarber/web/src/components/ToastContainer/Toast/index.tsx":"18"},{"size":492,"mtime":1606151953645,"results":"19","hashOfConfig":"20"},{"size":1608,"mtime":1607541998946,"results":"21","hashOfConfig":"20"},{"size":761,"mtime":1607556482577,"results":"22","hashOfConfig":"20"},{"size":2382,"mtime":1608392846358,"results":"23","hashOfConfig":"20"},{"size":325,"mtime":1608304784168,"results":"24","hashOfConfig":"20"},{"size":116,"mtime":1608170138876,"results":"25","hashOfConfig":"20"},{"size":1108,"mtime":1607556512117,"results":"26","hashOfConfig":"20"},{"size":381,"mtime":1606404939448,"results":"27","hashOfConfig":"20"},{"size":355,"mtime":1607555585555,"results":"28","hashOfConfig":"20"},{"size":316,"mtime":1606405025225,"results":"29","hashOfConfig":"20"},{"size":320,"mtime":1607537702724,"results":"30","hashOfConfig":"20"},{"size":1155,"mtime":1606404819299,"results":"31","hashOfConfig":"20"},{"size":162,"mtime":1608387430736,"results":"32","hashOfConfig":"20"},{"size":786,"mtime":1608393659087,"results":"33","hashOfConfig":"20"},{"size":1458,"mtime":1608386882665,"results":"34","hashOfConfig":"20"},{"size":272,"mtime":1608304543673,"results":"35","hashOfConfig":"20"},{"size":1191,"mtime":1608393537017,"results":"36","hashOfConfig":"20"},{"size":1196,"mtime":1608393474717,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"gsho5f",{"filePath":"41","messages":"42","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/turri/www/gobarber/web/src/styles/global.ts",[],["78","79","80","81","82"],"/home/turri/www/gobarber/web/src/components/Input/index.tsx",["83","84","85"],"import React, {\n  InputHTMLAttributes,\n  useEffect,\n  useRef,\n  useState,\n  useCallback,\n} from 'react';\nimport { IconBaseProps } from 'react-icons';\nimport { FiAlertCircle } from 'react-icons/fi';\nimport { useField } from '@unform/core';\n\nimport Tootlip from '../Tooltip/index';\n\nimport { Container, ErrorDiv } from './styles';\n\ninterface InputProps extends InputHTMLAttributes<HTMLInputElement> {\n  name: string;\n  icon?: React.ComponentType<IconBaseProps>;\n}\n\nconst Input: React.FC<InputProps> = ({ name, icon: Icon, ...rest }) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isFocused, setIsFocused] = useState(false);\n  const [isFilled, setIsFilled] = useState(false);\n\n  const { fieldName, defaultValue, error, registerField } = useField(name);\n\n  const handleInputFocus = useCallback(() => {\n    setIsFocused(true);\n  }, []);\n\n  const handleInputBlur = useCallback(() => {\n    setIsFocused(false);\n\n    setIsFilled(!!inputRef.current?.value);\n  }, []);\n\n  useEffect(() => {\n    registerField({\n      name: fieldName,\n      ref: inputRef.current,\n      path: 'value',\n    });\n  }, [fieldName, registerField]);\n\n  return (\n    <Container isErrored={!!error} isFilled={isFilled} isFocused={isFocused}>\n      {Icon && <Icon size={20} />}\n      <input\n        onFocus={handleInputFocus}\n        onBlur={handleInputBlur}\n        defaultValue={defaultValue}\n        ref={inputRef}\n        {...rest}\n      />\n      {error && (\n        <ErrorDiv title={error}>\n          <FiAlertCircle color=\"#c53030\" size={20} />\n        </ErrorDiv>\n      )}\n    </Container>\n  );\n};\n\nexport default Input;\n",["86","87","88","89","90"],"/home/turri/www/gobarber/web/src/components/Tooltip/styles.ts",[],"/home/turri/www/gobarber/web/src/pages/SignIn/index.tsx",["91"],"import React, { useCallback, useRef } from 'react';\nimport { FiLogIn, FiMail, FiLock } from 'react-icons/fi';\nimport { FormHandles } from '@unform/core';\nimport { Form } from '@unform/web';\nimport * as Yup from 'yup';\n\nimport { useAuth } from '../../hooks/auth';\nimport { useToast } from '../../hooks/toast';\nimport getValidationErrors from '../../utils/getValidationErrors';\n\nimport logoImg from '../../assets/logo.svg';\n\nimport Input from '../../components/Input';\nimport Button from '../../components/Button';\n\nimport { Container, Content, Background } from './styles';\n\ninterface SignInFormData {\n  email: string;\n  password: string;\n}\nconst SignIn: React.FC = () => {\n  const formRef = useRef<FormHandles>(null);\n\n  const { signIn } = useAuth();\n  const { addToast } = useToast();\n\n  const handleSubmit = useCallback(\n    async (data: SignInFormData) => {\n      try {\n        const schema = Yup.object().shape({\n          email: Yup.string()\n            .required('E-mail obrigatório')\n            .email('Digite um e-mail válido'),\n          password: Yup.string().required('Senha obrigatória'),\n        });\n\n        await schema.validate(data, {\n          abortEarly: false,\n        });\n\n        await signIn({\n          email: data.email,\n          password: data.password,\n        });\n      } catch (err) {\n        if (err instanceof Yup.ValidationError) {\n          const errors = getValidationErrors(err);\n\n          formRef.current?.setErrors(errors);\n        }\n\n        addToast({\n          type: 'error',\n          title: 'Erro na autenticação ',\n          description: 'Ocorreu um erro ao fazer login, cheque as credenciais',\n        });\n      }\n    },\n    [signIn, addToast],\n  );\n\n  return (\n    <Container>\n      <Content>\n        <img src={logoImg} alt=\"GoBarber\" />\n\n        <Form ref={formRef} onSubmit={handleSubmit}>\n          <h1>Faça seu logon</h1>\n\n          <Input name=\"email\" icon={FiMail} placeholder=\"E-mail\" />\n\n          <Input\n            name=\"password\"\n            icon={FiLock}\n            type=\"password\"\n            placeholder=\"Senha\"\n          />\n\n          <Button type=\"submit\">Entrar</Button>\n\n          <a href=\"forgot\">Esqueci minha senha</a>\n        </Form>\n\n        <a href=\"login\">\n          <FiLogIn />\n          Criar Conta\n        </a>\n      </Content>\n\n      <Background />\n    </Container>\n  );\n};\n\nexport default SignIn;\n","/home/turri/www/gobarber/web/src/App.tsx",[],"/home/turri/www/gobarber/web/src/services/api.ts",[],"/home/turri/www/gobarber/web/src/components/Input/styles.ts",[],"/home/turri/www/gobarber/web/src/components/Button/styles.ts",[],"/home/turri/www/gobarber/web/src/components/Tooltip/index.tsx",[],"/home/turri/www/gobarber/web/src/components/Button/index.tsx",["92"],"/home/turri/www/gobarber/web/src/utils/getValidationErrors.ts",["93"],"/home/turri/www/gobarber/web/src/pages/SignIn/styles.ts",[],"/home/turri/www/gobarber/web/src/components/ToastContainer/styles.ts",[],"/home/turri/www/gobarber/web/src/components/ToastContainer/index.tsx",["94"],"/home/turri/www/gobarber/web/src/hooks/toast.tsx",[],"/home/turri/www/gobarber/web/src/hooks/index.tsx",[],"/home/turri/www/gobarber/web/src/components/ToastContainer/Toast/styles.ts",[],"/home/turri/www/gobarber/web/src/components/ToastContainer/Toast/index.tsx",["95"],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","severity":1,"message":"107","line":2,"column":3,"nodeType":"108","messageId":"109","endLine":2,"endColumn":22},{"ruleId":"106","severity":1,"message":"110","line":8,"column":10,"nodeType":"108","messageId":"109","endLine":8,"endColumn":23},{"ruleId":"106","severity":1,"message":"111","line":12,"column":8,"nodeType":"108","messageId":"109","endLine":12,"endColumn":15},{"ruleId":"96","replacedBy":"112"},{"ruleId":"98","replacedBy":"113"},{"ruleId":"100","replacedBy":"114"},{"ruleId":"102","replacedBy":"115"},{"ruleId":"104","replacedBy":"116"},{"ruleId":"106","severity":1,"message":"117","line":3,"column":10,"nodeType":"108","messageId":"109","endLine":3,"endColumn":21},{"ruleId":"106","severity":1,"message":"118","line":1,"column":17,"nodeType":"108","messageId":"109","endLine":1,"endColumn":37},{"ruleId":"106","severity":1,"message":"119","line":1,"column":10,"nodeType":"108","messageId":"109","endLine":1,"endColumn":25},{"ruleId":"106","severity":1,"message":"120","line":6,"column":10,"nodeType":"108","messageId":"109","endLine":6,"endColumn":22},{"ruleId":"106","severity":1,"message":"120","line":9,"column":10,"nodeType":"108","messageId":"109","endLine":9,"endColumn":22},"lines-around-directive",["121"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'InputHTMLAttributes' is defined but never used.","Identifier","unusedVar","'IconBaseProps' is defined but never used.","'Tootlip' is defined but never used.",["121"],[],[],[],[],"'FormHandles' is defined but never used.","'ButtonHTMLAttributes' is defined but never used.","'ValidationError' is defined but never used.","'ToastMessage' is defined but never used.","padding-line-between-statements"]